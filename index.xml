<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mike Shogin. Systems/Software architect, Expert Software Consultant &amp; Software Enginieer.</title>
    <link>https://www.mikeshogin.com/</link>
    <description>Recent content on Mike Shogin. Systems/Software architect, Expert Software Consultant &amp; Software Enginieer.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2021 &lt;a href=&#39;https://www.mikeshogin.com&#39;&gt;Mike Shogin&lt;/a&gt;.&lt;/a&gt;.</copyright>
    <lastBuildDate>Thu, 29 Oct 2020 10:01:43 +0200</lastBuildDate><atom:link href="https://www.mikeshogin.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Benchmark access to the pool of objects: sync.Pool VS buffered channel</title>
      <link>https://www.mikeshogin.com/golang/syncpool-vs-channel/</link>
      <pubDate>Thu, 29 Oct 2020 10:01:43 +0200</pubDate>
      
      <guid>https://www.mikeshogin.com/golang/syncpool-vs-channel/</guid>
      <description>This is a common situation when we need to create a global package variable and then access to that variable in the package&amp;rsquo;s functions. There could be many different reasons why do we use global variables, let&amp;rsquo;s talk about that in another article.
Actually, there&amp;rsquo;s nothing wrong to have a global variables in the package and there are even benefits following such approach. Everything is fine till the moment when we need to make our package reloadable and after that things become more interesting.</description>
    </item>
    
    <item>
      <title>Inefficient ioutil.ReadAll</title>
      <link>https://www.mikeshogin.com/golang/ioutil-readall/</link>
      <pubDate>Tue, 22 Sep 2020 13:19:43 +0200</pubDate>
      
      <guid>https://www.mikeshogin.com/golang/ioutil-readall/</guid>
      <description>This a very small article about file readers.
Let&amp;rsquo;s consider ReadAll function from ioutil package. We use it a lot in our code base. In our infrastructure, we have a backend box and we use it for the background tasks. Mostly it&amp;rsquo;s about converting external data files to our internal format.
One sunny day, we got a notification from OOM Killer. One of out task was killed. That task is about converting JSON file to some smart binary format for the fast data access.</description>
    </item>
    
  </channel>
</rss>
